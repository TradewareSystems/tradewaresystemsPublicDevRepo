SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -1 ORDER BY BR.TRADED_AT_DT_TM DESC





SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000 AND BR.DT_STAMP > CURRENT_DATE -1;
----------------------------------------------------------------------------------------------------------------------SELECT BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF, BR.TRADED_AT_DT_TM from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -1 ORDER BY BR.TRADED_AT_DT_TM DESC





SELECT BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF, BR.TRADED_AT_DT_TM from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000 AND BR.DT_STAMP > CURRENT_DATE -1;

-----------------------------------------------------------------------------------------------------

SELECT BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF, BR.TRADED_AT_DT_TM from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND (  (RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500)  OR (RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000) ) AND BR.DT_STAMP > CURRENT_DATE -1;

-----------------------------------------------------------------------------------------------------------------------

SELECT SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND (  (RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500)  OR (RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000) ) AND BR.DT_STAMP > CURRENT_DATE -1;


----------------------------------------------------------------------------------------------------------------------
***************************************************************************************************
----------------------------------------------------------------------------------------------------------------------SELECT BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF, BR.TRADED_AT_DT_TM from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND ( (RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_5_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_5_MIN) AND ( (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) OR (BR.TRADABLE_STATE_ID = 'SELL' AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN < BR.VWAP_VAL)) ) AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -1 ORDER BY BR.TRADED_AT_DT_TM DESC





SELECT BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF, BR.TRADED_AT_DT_TM from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND ((RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_1_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_1_MIN) AND ( (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_1_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) OR (BR.TRADABLE_STATE_ID = 'SELL' AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_CLOSE_1_MIN AND RULE.CURRENT_CNDL_OPEN < BR.VWAP_VAL)) )  AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000 AND BR.DT_STAMP > CURRENT_DATE -1;

-----------------------------------------------------------------------------------------------------

SELECT BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF, BR.TRADED_AT_DT_TM from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND (  ()  OR () )


----------------------------------------------------------------------------------------------------------------------
***************************************************************************************************

----------------------------------------------------------------------------------------------------------------------  ------------------------------------------------------------------------------------------------------------
SELECT BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF, BR.TRADED_AT_DT_TM from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000 AND BR.DT_STAMP > CURRENT_DATE -1;

SELECT BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF, BR.TRADED_AT_DT_TM from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <1000 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -1;

-----------------------------------------------------------------------------------------------

SELECT BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF, BR.TRADED_AT_DT_TM from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND (  (RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000)  OR (RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500) ) AND BR.DT_STAMP > CURRENT_DATE -1 ORDER BY BR.TRADED_AT_DT_TM DESC;


UPDATE T_ORB_TRADE_RULE SET TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true WHERE OPEN_RANGE_BREAK_OUT_ID IN (SELECT BR.OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND ( (RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_5_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_5_MIN) AND ( (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) OR (BR.TRADABLE_STATE_ID = 'SELL' AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN < BR.VWAP_VAL)) ) AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <1000 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -55 ORDER BY BR.TRADED_AT_DT_TM DESC)



----------------------------------------------------------------------------------------------------------------------
***************************************************************************************************

----------------------------------------------------------------------------------------------------------------------
SELECT BR.T_OPEN_RANGE_BREAK_OUT from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND ( (RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_5_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_5_MIN) AND ( (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) OR (BR.TRADABLE_STATE_ID = 'SELL' AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN < BR.VWAP_VAL)) ) AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND BR.DT_STAMP > CURRENT_DATE -22 ORDER BY BR.TRADED_AT_DT_TM DESC;


UPDATE T_ORB_TRADE_RULE SET TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true WHERE OPEN_RANGE_BREAK_OUT_ID IN (SELECT BR.OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND ( (RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_5_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_5_MIN) AND ( (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) OR (BR.TRADABLE_STATE_ID = 'SELL' AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN < BR.VWAP_VAL)) ) AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <1000 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -55 ORDER BY BR.TRADED_AT_DT_TM DESC)

UPDATE T_ORB_TRADE_RULE SET TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true WHERE OPEN_RANGE_BREAK_OUT_ID IN (SELECT BR.OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <1000 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -1)

 SELECT DT_STAMP, count(*), SUM(PROF_LOS_AMT_VAL), ((SUM(PROF_LOS_AMT_VAL)) - (count(*) * 150)) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' GROUP BY DT_STAMP ORDER BY DT_STAMP DESC;
 
 
  SELECT DT_STAMP, count(*), SUM(PROF_LOS_AMT_VAL), ((SUM(PROF_LOS_AMT_VAL)) - (count(*) * 150)) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' GROUP BY DT_STAMP ORDER BY DT_STAMP DESC;
  
  ------------------------------------------------------------------------------------------------------------
SELECT  SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000;

SELECT  SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000;

-----------------------------------------------------------------------------------------------

SELECT BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF, BR.TRADED_AT_DT_TM from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND (  (RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000)  OR (RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000) ) AND BR.DT_STAMP > CURRENT_DATE -1 ORDER BY BR.TRADED_AT_DT_TM DESC;


----------------------------------------------------------------------------------------------------------------------
***************************************************************************************************

----------------------------------------------------------------------------------------------------------------------
SELECT BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF, BR.TRADED_AT_DT_TM from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND  TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND BR.DT_STAMP > CURRENT_DATE -55 ORDER BY BR.TRADED_AT_DT_TM DESC;




SELECT BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF, BR.TRADED_AT_DT_TM from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND ( (RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_5_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_5_MIN) AND ( (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) OR (BR.TRADABLE_STATE_ID = 'SELL' AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN < BR.VWAP_VAL)) ) AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND BR.DT_STAMP > CURRENT_DATE -22 ORDER BY BR.TRADED_AT_DT_TM DESC;










SELECT ((SUM(PROF_LOS_AMT_VAL)) - (count(*) * 150)) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND ((RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_1_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_1_MIN) AND ( (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_1_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) OR (BR.TRADABLE_STATE_ID = 'SELL' AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_CLOSE_1_MIN AND RULE.CURRENT_CNDL_OPEN < BR.VWAP_VAL)) )  AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000;





----------------------------------------------------------------------------------------------------------------------
***************************************************************************************************

----------------------------------------------------------------------------------------------------------------------SELECT BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF, BR.TRADED_AT_DT_TM from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000 AND BR.DT_STAMP > CURRENT_DATE -1 ORDER BY BR.TRADED_AT_DT_TM DESC;\\\



SELECT BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF, BR.TRADED_AT_DT_TM from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND BR.DT_STAMP > CURRENT_DATE -1 ORDER BY BR.TRADED_AT_DT_TM DESC;



SELECT  (SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 700 GROUP BY DT_STAMP ORDER BY DT_STAMP DESC;


-----------------------------------------------------------------------------------------------------------------------
***************************************************************************************************

-----------------------------------------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------------------------------------
***************************************************************************************************

 3199		131				
 3336       4330
 2779       3552
  984       4718
 1028       4385
 2231       4729
 5126       4747
 3760       4457
 2723       3928
 4961       3956
 5498       3970
 4674       4005
 5154       4006
 5501       3991
 1898       4011
 2545       4547
  633       4546
 2269       4560
 3628       4048
 4919       4049
 3568       4571
 4504         82
 1297        246
 3956        280
 4574        279
 5319        298
 1302        566
 5322        610
 1209       1334
 3556       1302
 1746       1435
 3135       1566
 3552       1817
 1466       1818
 4376       1842
 2365       1885
 2784       2149
 4794       2231			1842
 4893       2254			1898
  167       2305			1978
  408       2376			2145
  268       2356			2642
 1980       2423			3552
 5061       2545			3970
 5038       2607			4006
 5307       2642			4330
  246       2784			4747
 4729       4841			4841
 2704       4893			5052
 4951       4919			5066
   73       5052			5237
 1492       5126			5341
 3632       5166			5465
 2998		5370					
 3991
 1456
 1019
 4330
 2696
 4662
 4718
 4006
 2027
 5180
 4971
 1011
 3329
 4371
 5025
 5465
 5052
 4571
  566
 2254
  298
 1618
  186
 4841
 5024
 1860
 4547
 1001
 1221
 4648
 4488
 1107
 
 
 2231,5126, 2545, 4919, 3991, 4330, 4718, 4006, 5052, 4571, 566, 2254, 298, 4841, 4547



SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -12 AND
tradeware_systems-# DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500;


SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000 AND BR.DT_STAMP > CURRENT_DATE -13  AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500;

 SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -12;
 
 
 
 ----------------GREAT GREAT GREAT
 
 SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -55 AND
tradeware_systems-# DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500;


SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 750 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000 AND BR.DT_STAMP > CURRENT_DATE -55  AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500;

BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF,

 SELECT BR.OPEN_RANGE_BREAK_OUT_ID AS ID, BR.DT_STAMP, BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -55 AND
tradeware_systems-# DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500;

UNION ALL
SELECT BR.OPEN_RANGE_BREAK_OUT_ID AS ID, BR.DT_STAMP, BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 750 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000 AND BR.DT_STAMP > CURRENT_DATE -55  AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500;

 ----------------GREAT GREAT GREAT

SELECT ID, DT_STAMP, SYMBOL_NAME, BSD_1, BSD_2, BSD_3, POS_MOVE_VAL, PROF_LOS_AMT_VAL, FINAL_PROF from (SELECT BR.OPEN_RANGE_BREAK_OUT_ID AS ID, BR.DT_STAMP, BR.SYMBOL_NAME, BR.BUY_SELL_DIFF_VAL AS BSD_1, BR.BUY_SELL_DIFF_VAL_2 AS BSD_2, BR.BUY_SELL_DIFF_VAL_3 AS BSD_3, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 750 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 750 AND BR.DT_STAMP > CURRENT_DATE -13 
UNION ALL
SELECT BR.OPEN_RANGE_BREAK_OUT_ID AS ID, BR.DT_STAMP, BR.SYMBOL_NAME, BR.BUY_SELL_DIFF_VAL AS BSD_1, BR.BUY_SELL_DIFF_VAL_2 AS BSD_2, BR.BUY_SELL_DIFF_VAL_3 AS BSD_3, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND
DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500 ORDER BY ID) AS foo ORDER BY ID DESC;

Same query for total
SELECT ount(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 750 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 750 AND BR.DT_STAMP > CURRENT_DATE -13 
UNION ALL
SELECT ount(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND
DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500 ORDER BY ID) AS foo ORDER BY ID DESC;


-----------------------------------------------------------------------------------------------------------
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND ((RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_1_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_1_MIN) AND (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_1_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) )  AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 750 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 750 AND BR.DT_STAMP > CURRENT_DATE -13

Logical
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 750 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 750 AND BR.DT_STAMP > CURRENT_DATE -13

---------**********8-----------------************8------------
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND (RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_1_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_1_MIN) AND (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_1_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500
------------------******8888----------************8-------------------

SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND
DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500



SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND (RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_5_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_5_MIN) AND (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500

-------------------------------------------------

SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND (RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_1_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_1_MIN) AND (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_1_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) AND BR.BUY_SELL_DIFF_VAL < 500 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND DTL.CNDL_4_SIZE < 3000 AND DTL.CNDL_4_SIZE > 500


-----------------------------------------------------------------------------------------------------
SELECT DT_STAMP,count,PROF_LOS from(SELECT BR.DT_STAMP, count(*) AS count, SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) AS PROF_LOS from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500 GROUP BY DT_STAMP
UNION ALL
SELECT BR.DT_STAMP, count(*) AS count, SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) AS PROF_LOS from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND
DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500 GROUP BY DT_STAMP ) AS foo ORDER BY DT_STAMP DESC;


---------------
SELECT ID, DT_STAMP, SYMBOL_NAME, BSD_1, BSD_2, BSD_3, POS_MOVE_VAL, PROF_LOS_AMT_VAL, FINAL_PROF from (SELECT BR.OPEN_RANGE_BREAK_OUT_ID AS ID, BR.DT_STAMP, BR.SYMBOL_NAME, BR.BUY_SELL_DIFF_VAL AS BSD_1, BR.BUY_SELL_DIFF_VAL_2 AS BSD_2, BR.BUY_SELL_DIFF_VAL_3 AS BSD_3, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500
UNION ALL
SELECT BR.OPEN_RANGE_BREAK_OUT_ID AS ID, BR.DT_STAMP, BR.SYMBOL_NAME, BR.BUY_SELL_DIFF_VAL AS BSD_1, BR.BUY_SELL_DIFF_VAL_2 AS BSD_2, BR.BUY_SELL_DIFF_VAL_3 AS BSD_3, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND
DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500) AS foo ORDER BY DT_STAMP DESC;

 ----------------------------------------------------------------------------------
 
 SELECT DT_STAMP,count,PROF_LOS from(SELECT BR.DT_STAMP, count(*) AS count, SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) AS PROF_LOS from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -1000 AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500 GROUP BY DT_STAMP
UNION ALL
SELECT BR.DT_STAMP, count(*) AS count, SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) AS PROF_LOS from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -1000 AND
DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500 GROUP BY DT_STAMP ) AS foo ORDER BY DT_STAMP DESC;


---------------
SELECT ID, DT_STAMP, SYMBOL_NAME, BSD_1, BSD_2, BSD_3, POS_MOVE_VAL, PROF_LOS_AMT_VAL, FINAL_PROF from (SELECT BR.OPEN_RANGE_BREAK_OUT_ID AS ID, BR.DT_STAMP, BR.SYMBOL_NAME, BR.BUY_SELL_DIFF_VAL AS BSD_1, BR.BUY_SELL_DIFF_VAL_2 AS BSD_2, BR.BUY_SELL_DIFF_VAL_3 AS BSD_3, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500
UNION ALL
SELECT BR.OPEN_RANGE_BREAK_OUT_ID AS ID, BR.DT_STAMP, BR.SYMBOL_NAME, BR.BUY_SELL_DIFF_VAL AS BSD_1, BR.BUY_SELL_DIFF_VAL_2 AS BSD_2, BR.BUY_SELL_DIFF_VAL_3 AS BSD_3, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND
DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500) AS foo ORDER BY DT_STAMP DESC;


------------------------
-----------------------------
----------------------------------
forwardEngulginRuleTrades

SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND 
(OHLC.HIGH_3 > OHLC.HIGH_4 AND ( (DTL.CNDL_3_TYPE = 'G' AND OHLC.CLOSE_3 >= OHLC.CLOSE_4 AND  OHLC.CLOSE_3 >= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.CLOSE_4 ) OR (DTL.CNDL_3_TYPE = 'R' AND OHLC.OPEN_3 >= OHLC.CLOSE_4 AND  OHLC.OPEN_3 >= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.CLOSE_4 ) ) ) AND ( (DTL.CNDL_3_TYPE = 'G' AND DTL.CNDL_4_TYPE = 'R'  AND BR.TRADABLE_STATE_ID = 'BUY')
OR (DTL.CNDL_3_TYPE = 'R' AND DTL.CNDL_4_TYPE = 'G'  AND BR.TRADABLE_STATE_ID = 'SELL') )    AND BR.DT_STAMP > CURRENT_DATE -16 AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=1500 AND BR.CNDL_NUM < 24;

UPDATE T_ORB_TRADE_RULE SET TRADE_ON_FWD_ENGULFING_IND = true WHERE OPEN_RANGE_BREAK_OUT_ID IN (SELECT BR.OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND 
(OHLC.HIGH_3 > OHLC.HIGH_4 AND ( (DTL.CNDL_3_TYPE = 'G' AND OHLC.CLOSE_3 >= OHLC.CLOSE_4 AND  OHLC.CLOSE_3 >= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.CLOSE_4 ) OR (DTL.CNDL_3_TYPE = 'R' AND OHLC.OPEN_3 >= OHLC.CLOSE_4 AND  OHLC.OPEN_3 >= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.CLOSE_4 ) ) ) AND ( (DTL.CNDL_3_TYPE = 'G' AND DTL.CNDL_4_TYPE = 'R'  AND BR.TRADABLE_STATE_ID = 'BUY')
OR (DTL.CNDL_3_TYPE = 'R' AND DTL.CNDL_4_TYPE = 'G'  AND BR.TRADABLE_STATE_ID = 'SELL') ) AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=1500 )



------------------------
-----------------------------
----------------------------------

select count(*) from (select  HA_OPEN_4, HA_OPEN_3, HA_OPEN_2, HA_CLOSE_4, HA_CLOSE_3, HA_CLOSE_2, GREATEST(GREATEST(HA_OPEN_4,HA_CLOSE_4),HIGH_4) as HA_HIGH_4, GREATEST(GREATEST(HA_OPEN_3,HA_CLOSE_3),HIGH_3) as HA_HIGH_3, GREATEST(GREATEST(HA_OPEN_2,HA_CLOSE_2),HIGH_2) as HA_HIGH_2, LEAST(LEAST(HA_OPEN_4, HA_CLOSE_4), LOW_4) AS HA_LOW_4, LEAST(LEAST(HA_OPEN_3, HA_CLOSE_3), LOW_3) AS HA_LOW_3, LEAST(LEAST(HA_OPEN_2, HA_CLOSE_2), LOW_2) AS HA_LOW_2 from (select ((OPEN_3 +CLOSE_3)/2) AS HA_OPEN_4, ((OPEN_2 +CLOSE_2)/2) AS HA_OPEN_3, ((OPEN_1 +CLOSE_1)/2) AS HA_OPEN_2, ((OPEN_4 +CLOSE_4+LOW_4+HIGH_4)/4) AS HA_CLOSE_4,((OPEN_3 +CLOSE_3+LOW_3+HIGH_3)/4) AS HA_CLOSE_3, ((OPEN_2 +CLOSE_2+LOW_2+HIGH_2)/4) AS HA_CLOSE_2, ((OPEN_1 +CLOSE_1+LOW_1+HIGH_1)/4) AS HA_CLOSE_1, HIGH_4, LOW_4, HIGH_3, LOW_3, HIGH_2, LOW_2 from T_ORB_PREV_CNDL_OHLC where CLOSE_1 IS NOT NULL)  AS foo) AS foo_2 where ( HA_OPEN_4 = HA_LOW_4 AND HA_OPEN_3 = HA_LOW_3 AND HA_OPEN_2 = HA_LOW_2 ) AND  ( ((HA_HIGH_4-HA_CLOSE_4) < (HA_CLOSE_4 - HA_OPEN_4)) AND ((HA_HIGH_3-HA_CLOSE_3) < (HA_CLOSE_3 - HA_OPEN_3)) AND ((HA_HIGH_2-HA_CLOSE_2) < (HA_CLOSE_2 - HA_OPEN_2)) )



select GREATEST(HIGH_4, LOW_4) from T_ORB_PREV_CNDL_OHLC where CLOSE_1 IS NOT NULL



select ((OPEN_3 +CLOSE_3)/2) AS HA_OPEN_4, ((OPEN_2 +CLOSE_2)/2) AS HA_OPEN_3, ((OPEN_1 +CLOSE_1)/2) AS HA_OPEN_2, ((OPEN_4 +CLOSE_4+LOW_4+HIGH_4)/4) AS HA_CLOSE_4,((OPEN_3 +CLOSE_3+LOW_3+HIGH_3)/4) AS HA_CLOSE_3, ((OPEN_2 +CLOSE_2+LOW_2+HIGH_2)/4) AS HA_CLOSE_2, ((OPEN_1 +CLOSE_1+LOW_1+HIGH_1)/4) AS HA_CLOSE_1, HIGH_4, LOW_4, HIGH_3, LOW_3, HIGH_2, LOW_2 from T_ORB_PREV_CNDL_OHLC where CLOSE_1 IS NOT NULL 


select  HA_OPEN_4, HA_OPEN_3, HA_OPEN_2, HA_CLOSE_4, HA_CLOSE_3, HA_CLOSE_2, GREATEST(GREATEST(HA_OPEN_4,HA_CLOSE_4),HIGH_4) as HA_HIGH_4, GREATEST(GREATEST(HA_OPEN_3,HA_CLOSE_3),HIGH_3) as HA_HIGH_3, GREATEST(GREATEST(HA_OPEN_2,HA_CLOSE_2),HIGH_2) as HA_HIGH_2, LEAST(LEAST(HA_OPEN_4, HA_CLOSE_4), LOW_4) AS HA_LOW_4, LEAST(LEAST(HA_OPEN_3, HA_CLOSE_3), LOW_3) AS HA_LOW_3, LEAST(LEAST(HA_OPEN_2, HA_CLOSE_2), LOW_2) AS HA_LOW_2 from (select ((OPEN_3 +CLOSE_3)/2) AS HA_OPEN_4, ((OPEN_2 +CLOSE_2)/2) AS HA_OPEN_3, ((OPEN_1 +CLOSE_1)/2) AS HA_OPEN_2, ((OPEN_4 +CLOSE_4+LOW_4+HIGH_4)/4) AS HA_CLOSE_4,((OPEN_3 +CLOSE_3+LOW_3+HIGH_3)/4) AS HA_CLOSE_3, ((OPEN_2 +CLOSE_2+LOW_2+HIGH_2)/4) AS HA_CLOSE_2, ((OPEN_1 +CLOSE_1+LOW_1+HIGH_1)/4) AS HA_CLOSE_1, HIGH_4, LOW_4, HIGH_3, LOW_3, HIGH_2, LOW_2 from T_ORB_PREV_CNDL_OHLC where CLOSE_1 IS NOT NULL)  AS foo  

select count(*) from (select  HA_OPEN_4, HA_OPEN_3, HA_OPEN_2, HA_CLOSE_4, HA_CLOSE_3, HA_CLOSE_2, GREATEST(GREATEST(HA_OPEN_4,HA_CLOSE_4),HIGH_4) as HA_HIGH_4, GREATEST(GREATEST(HA_OPEN_3,HA_CLOSE_3),HIGH_3) as HA_HIGH_3, GREATEST(GREATEST(HA_OPEN_2,HA_CLOSE_2),HIGH_2) as HA_HIGH_2, LEAST(LEAST(HA_OPEN_4, HA_CLOSE_4), LOW_4) AS HA_LOW_4, LEAST(LEAST(HA_OPEN_3, HA_CLOSE_3), LOW_3) AS HA_LOW_3, LEAST(LEAST(HA_OPEN_2, HA_CLOSE_2), LOW_2) AS HA_LOW_2 from (select ((OPEN_3 +CLOSE_3)/2) AS HA_OPEN_4, ((OPEN_2 +CLOSE_2)/2) AS HA_OPEN_3, ((OPEN_1 +CLOSE_1)/2) AS HA_OPEN_2, ((OPEN_4 +CLOSE_4+LOW_4+HIGH_4)/4) AS HA_CLOSE_4,((OPEN_3 +CLOSE_3+LOW_3+HIGH_3)/4) AS HA_CLOSE_3, ((OPEN_2 +CLOSE_2+LOW_2+HIGH_2)/4) AS HA_CLOSE_2, ((OPEN_1 +CLOSE_1+LOW_1+HIGH_1)/4) AS HA_CLOSE_1, HIGH_4, LOW_4, HIGH_3, LOW_3, HIGH_2, LOW_2 from T_ORB_PREV_CNDL_OHLC where CLOSE_1 IS NOT NULL)  AS foo) AS foo_2 where ( HA_OPEN_4 = HA_LOW_4 AND HA_OPEN_3 = HA_LOW_3 AND HA_OPEN_2 = HA_LOW_2 ) AND  ( ((HA_HIGH_4-HA_CLOSE_4) < (HA_CLOSE_4 - HA_OPEN_4)) AND ((HA_HIGH_3-HA_CLOSE_3) < (HA_CLOSE_3 - HA_OPEN_3)) AND ((HA_HIGH_2-HA_CLOSE_2) < (HA_CLOSE_2 - HA_OPEN_2)) )


-----------------------------------------------------------------------------------------------------------------------------
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR wHERE BR.DT_STAMP > CURRENT_DATE -28 AND BR.TRADABLE_STATE_ID = 'BUY' AND BR.OPEN_RANGE_BREAK_OUT_ID IN ( select OPEN_RANGE_BREAK_OUT_ID from (select OPEN_RANGE_BREAK_OUT_ID, HA_OPEN_4, HA_OPEN_3, HA_OPEN_2, HA_CLOSE_4, HA_CLOSE_3, HA_CLOSE_2, GREATEST(GREATEST(HA_OPEN_4,HA_CLOSE_4),HIGH_4) as HA_HIGH_4, GREATEST(GREATEST(HA_OPEN_3,HA_CLOSE_3),HIGH_3) as HA_HIGH_3, GREATEST(GREATEST(HA_OPEN_2,HA_CLOSE_2),HIGH_2) as HA_HIGH_2, LEAST(LEAST(HA_OPEN_4, HA_CLOSE_4), LOW_4) AS HA_LOW_4, LEAST(LEAST(HA_OPEN_3, HA_CLOSE_3), LOW_3) AS HA_LOW_3, LEAST(LEAST(HA_OPEN_2, HA_CLOSE_2), LOW_2) AS HA_LOW_2 from (select OPEN_RANGE_BREAK_OUT_ID, ((OPEN_3 +CLOSE_3)/2) AS HA_OPEN_4, ((OPEN_2 +CLOSE_2)/2) AS HA_OPEN_3, ((OPEN_1 +CLOSE_1)/2) AS HA_OPEN_2, ((OPEN_4 +CLOSE_4+LOW_4+HIGH_4)/4) AS HA_CLOSE_4,((OPEN_3 +CLOSE_3+LOW_3+HIGH_3)/4) AS HA_CLOSE_3, ((OPEN_2 +CLOSE_2+LOW_2+HIGH_2)/4) AS HA_CLOSE_2, ((OPEN_1 +CLOSE_1+LOW_1+HIGH_1)/4) AS HA_CLOSE_1, HIGH_4, LOW_4, HIGH_3, LOW_3, HIGH_2, LOW_2 from T_ORB_PREV_CNDL_OHLC where CLOSE_1 IS NOT NULL)  AS foo) AS foo_2 where ( HA_OPEN_4 = HA_LOW_4 AND HA_OPEN_3 = HA_LOW_3 AND HA_OPEN_2 = HA_LOW_2 ) AND  ( ((HA_HIGH_4-HA_CLOSE_4) < (HA_CLOSE_4 - HA_OPEN_4)) AND ((HA_HIGH_3-HA_CLOSE_3) < (HA_CLOSE_3 - HA_OPEN_3)) AND ((HA_HIGH_2-HA_CLOSE_2) < (HA_CLOSE_2 - HA_OPEN_2))a )   )


-----------
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR wHERE BR.DT_STAMP > CURRENT_DATE -28 AND BR.OPEN_RANGE_BREAK_OUT_ID IN ( select OPEN_RANGE_BREAK_OUT_ID from (select OPEN_RANGE_BREAK_OUT_ID, HA_OPEN_4, HA_OPEN_3, HA_OPEN_2, HA_CLOSE_4, HA_CLOSE_3, HA_CLOSE_2, GREATEST(GREATEST(HA_OPEN_4,HA_CLOSE_4),HIGH_4) as HA_HIGH_4, GREATEST(GREATEST(HA_OPEN_3,HA_CLOSE_3),HIGH_3) as HA_HIGH_3, GREATEST(GREATEST(HA_OPEN_2,HA_CLOSE_2),HIGH_2) as HA_HIGH_2, LEAST(LEAST(HA_OPEN_4, HA_CLOSE_4), LOW_4) AS HA_LOW_4, LEAST(LEAST(HA_OPEN_3, HA_CLOSE_3), LOW_3) AS HA_LOW_3, LEAST(LEAST(HA_OPEN_2, HA_CLOSE_2), LOW_2) AS HA_LOW_2 from (select OPEN_RANGE_BREAK_OUT_ID, ((OPEN_3 +CLOSE_3)/2) AS HA_OPEN_4, ((OPEN_2 +CLOSE_2)/2) AS HA_OPEN_3, ((OPEN_1 +CLOSE_1)/2) AS HA_OPEN_2, ((OPEN_4 +CLOSE_4+LOW_4+HIGH_4)/4) AS HA_CLOSE_4,((OPEN_3 +CLOSE_3+LOW_3+HIGH_3)/4) AS HA_CLOSE_3, ((OPEN_2 +CLOSE_2+LOW_2+HIGH_2)/4) AS HA_CLOSE_2, ((OPEN_1 +CLOSE_1+LOW_1+HIGH_1)/4) AS HA_CLOSE_1, HIGH_4, LOW_4, HIGH_3, LOW_3, HIGH_2, LOW_2 from T_ORB_PREV_CNDL_OHLC where CLOSE_1 IS NOT NULL)  AS foo) AS foo_2 where ( HA_CLOSE_4 > HA_OPEN_4 AND HA_CLOSE_3 > HA_OPEN_3 AND HA_CLOSE_2 > HA_OPEN_2 )    )



select count(*), SUM(PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT WHERE OPEN_RANGE_BREAK_OUT_ID IN (select OPEN_RANGE_BREAK_OUT_ID from T_ORB_STOCHASTIC_DTL where ((STOCH_MIN_60_VAL_K1 <= 25 AND STOCH_MIN_15_VAL_K1 <= 25 AND STOCH_MIN_5_VAL_K1 <= 25 AND STOCH_MIN_5_VAL_D3 <=25) OR (STOCH_MIN_60_VAL_K1 >=75 AND STOCH_MIN_15_VAL_K1 >=75 AND STOCH_MIN_5_VAL_K1 >=75 AND STOCH_MIN_5_VAL_D3 >= 75)));

INNER JOIN
select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_STOCHASTIC_DTL STOCHASTIC ON  BR.OPEN_RANGE_BREAK_OUT_ID = STOCHASTIC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_HEIKENASHI_DTL HEIEN ON BR.OPEN_RANGE_BREAK_OUT_ID = HEIEN.OPEN_RANGE_BREAK_OUT_ID AND ((STOCHASTIC.STOCH_MIN_60_VAL_K1 <= 20 AND STOCHASTIC.STOCH_MIN_15_VAL_K1 <= 20 AND STOCHASTIC.STOCH_MIN_5_VAL_K1 <= 20 AND STOCHASTIC.STOCH_MIN_5_VAL_D3 <=20 AND BR.TRADABLE_STATE_ID = 'BUY' AND STOCHASTIC.STOCH_MIN_5_VAL_K1 > STOCHASTIC.STOCH_MIN_5_VAL_D3) OR (STOCHASTIC.STOCH_MIN_60_VAL_K1 >=80 AND STOCHASTIC.STOCH_MIN_15_VAL_K1 >=80 AND STOCHASTIC.STOCH_MIN_5_VAL_K1 >=80 AND STOCHASTIC.STOCH_MIN_5_VAL_D3 >= 80 AND BR.TRADABLE_STATE_ID = 'SELL' AND STOCHASTIC.STOCH_MIN_5_VAL_K1 < STOCHASTIC.STOCH_MIN_5_VAL_D3))  AND (HEIEN.HEIKIN_ASHI_TREND_MIN5 != 'NA' OR HEIEN.HEIKIN_ASHI_TREND_MIN15 != 'NA' OR HEIEN.HEIKIN_ASHI_TREND_MIN60 != 'NA');



BR.OPEN_RANGE_BREAK_OUT_ID = STOCHASTIC.STOCH_MIN_15_VAL_K1 <= 25 AND STOCHASTIC BR.OPEN_RANGE_BREAK_OUT_ID = STOCHASTIC.STOCH_MIN_5_VAL_K1 <= 25 AND STOCHASTIC BR.OPEN_RANGE_BREAK_OUT_ID = STOCHASTIC.STOCH_MIN_5_VAL_D3 <=25 AND BR.TRADABLE_STATE_ID = 'SELL') OR 

(STOCHASTIC BR.OPEN_RANGE_BREAK_OUT_ID = STOCHASTIC.STOCH_MIN_60_VAL_K1 >=75 AND STOCHASTIC BR.OPEN_RANGE_BREAK_OUT_ID = STOCHASTIC.STOCH_MIN_15_VAL_K1 >=75 AND STOCHASTIC BR.OPEN_RANGE_BREAK_OUT_ID = STOCHASTIC.STOCH_MIN_5_VAL_K1 >=75 AND STOCHASTIC BR.OPEN_RANGE_BREAK_OUT_ID = STOCHASTIC.STOCH_MIN_5_VAL_D3 >= 75 AND BR.TRADABLE_STATE_ID = 'BUY'))

--------------------------------------LOOKS OK 0--------------------------------
select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_HEIKENASHI_DTL HEIEN ON BR.OPEN_RANGE_BREAK_OUT_ID = HEIEN.OPEN_RANGE_BREAK_OUT_ID AND ((HEIEN.HEIKIN_ASHI_TREND_MIN60 LIKE '%BUY%' AND BR.TRADABLE_STATE_ID = 'BUY' AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500) AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) < 5000))  OR (HEIEN.HEIKIN_ASHI_TREND_MIN60 LIKE '%SELL%' AND BR.TRADABLE_STATE_ID = 'SELL') AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) > 100)  AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) < 7000) ) AND BR.DT_STAMP > CURRENT_DATE - 1 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=500;
--------------------------------------LOOKS OK 0--------------------------------

--------------------------------------LOOKS OK 1--------------------------------
select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_HEIKENASHI_DTL HEIEN ON BR.OPEN_RANGE_BREAK_OUT_ID = HEIEN.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID AND ((STOC.STOCH_MIN_5_VAL_K1 <40 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 LIKE '%BUY%' AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT LIKE '%SELL%' OR HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT LIKE '%SELL%') AND BR.TRADABLE_STATE_ID = 'BUY' AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500) AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) < 5000))  OR (STOC.STOCH_MIN_5_VAL_K1 >60 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 LIKE '%SELL%'  AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT LIKE '%BUY%' OR HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT LIKE '%BUY%') AND BR.TRADABLE_STATE_ID = 'SELL' AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) > 100)  AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) < 7000)  )  ) AND BR.DT_STAMP > CURRENT_DATE - 2 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=500;



 select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST HIST ON BR.OPEN_RANGE_BREAK_OUT_ID = HIST.OPEN_RANGE_BREAK_OUT_ID AND (HIST.CURRENT_CNDL_OPEN >  HIST.CNDL_AVG_LOW_1_MIN AND HIST.CURRENT_CNDL_OPEN < HIST.CNDL_AVG_HIH_1_MIN) AND ((BR.TRADABLE_STATE_ID = 'BUY' AND HIST.CURRENT_CNDL_OPEN > HIST.CNDL_AVG_CLOSE_1_MIN AND HIST.CURRENT_CNDL_OPEN > BR.VWAP_VAL AND ((( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 0) AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) < 7500)) ) OR (BR.TRADABLE_STATE_ID = 'SELL' AND HIST.CURRENT_CNDL_OPEN < HIST.CNDL_AVG_CLOSE_1_MIN AND HIST.CURRENT_CNDL_OPEN < BR.VWAP_VAL AND ((( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) > 0)  AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) < 7500)) )) AND BR.DT_STAMP = CURRENT_DATE - 2 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=2500;
--------------------------------------LOOKS OK 1--------------------------------

--------------------------------------LOOKS OBSERVATION--------------------------------
select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_HEIKENASHI_DTL HEIEN ON BR.OPEN_RANGE_BREAK_OUT_ID = HEIEN.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID AND ((STOC.STOCH_MIN_5_VAL_K1 <40 AND HEIEN.HEIKIN_ASHI_TREND_MIN15 LIKE '%BUY%' AND (HEIEN.HEIKIN_ASHI_TREND_MIN60 NOT LIKE '%SELL%' OR HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT LIKE '%SELL%') AND BR.TRADABLE_STATE_ID = 'BUY')  OR (STOC.STOCH_MIN_5_VAL_K1 >60 AND HEIEN.HEIKIN_ASHI_TREND_MIN15 LIKE '%SELL%'  AND (HEIEN.HEIKIN_ASHI_TREND_MIN60 NOT LIKE '%BUY%' OR HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT LIKE '%BUY%') AND BR.TRADABLE_STATE_ID = 'SELL') ) AND BR.DT_STAMP > CURRENT_DATE - 1 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=500;

https://markets.businessinsider.com/indices
https://www.nseindia.com/api/quote-equity?symbol=ACC&section=trade_info
****
select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND (( (STOC.STOCH_MIN_15_VAL_K1 <40 OR STOC.STOCH_MIN_60_VAL_K1 <40) AND BR.TRADABLE_STATE_ID = 'BUY' AND (DTL.CNDL_3_TYPE = 'G' AND DTL.CNDL_4_TYPE = 'R'))  OR ((STOC.STOCH_MIN_15_VAL_K1 >60 OR STOC.STOCH_MIN_60_VAL_K1 > 60)  AND BR.TRADABLE_STATE_ID = 'SELL'  AND (DTL.CNDL_3_TYPE = 'R' AND DTL.CNDL_4_TYPE = 'G') )  ) AND BR.DT_STAMP > CURRENT_DATE - 2 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=2500;
--------------------------------------LOOKS OBSERVATION--------------------------------

select count(*) from T_SYMBOL;
 select count(*) from T_SYMBOL where VALID_IND = 't';
 select count(*) from T_SYMBOL where VALID_IND = 't' AND INDEX_IND != 't';
select count(*) from T_SYMBOL where VALID_IND = 't' AND CATEGORY_FILTER = '1'; --99
 select count(*) from T_SYMBOL where VALID_IND = 't' AND CATEGORY_FILTER = '2'; --57
 
  select MAX(LOT_SIZE) from T_SYMBOL where VALID_IND = 't' AND CATEGORY_FILTER = '1';
select count(*) from T_SYMBOL where VALID_IND = 't' AND CATEGORY_FILTER = '1' AND LOT_SIZE >=2800;
UPDATE T_SYMBOL SET CATEGORY_FILTER = '2' where VALID_IND = 't' AND CATEGORY_FILTER = '1' AND LOT_SIZE >=2800;


   --------------------------------------------------------PAGE 2-------------------------------------------------
select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_HEIKENASHI_DTL HEIEN ON BR.OPEN_RANGE_BREAK_OUT_ID = HEIEN.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID AND ((STOC.STOCH_MIN_5_VAL_K1 <40 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 LIKE '%BUY%' AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT LIKE '%SELL%' OR HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT LIKE '%SELL%') AND BR.TRADABLE_STATE_ID = 'BUY' AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500) AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) < 5000))  OR (STOC.STOCH_MIN_5_VAL_K1 >60 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 LIKE '%SELL%'  AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT LIKE '%BUY%' OR HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT LIKE '%BUY%') AND BR.TRADABLE_STATE_ID = 'SELL' AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) > 100)  AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) < 7000)  )  ) AND BR.DT_STAMP > CURRENT_DATE - 2 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=500;



select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID AND (( (STOC.STOCH_MIN_15_VAL_K1 <40 OR STOC.STOCH_MIN_60_VAL_K1 <40) AND BR.TRADABLE_STATE_ID = 'BUY' AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 50) AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) < 15000))  OR ((STOC.STOCH_MIN_15_VAL_K1 >60 OR STOC.STOCH_MIN_60_VAL_K1 > 60)  AND BR.TRADABLE_STATE_ID = 'SELL' AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) > 100)  AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) < 17000)  )  ) AND BR.DT_STAMP > CURRENT_DATE - 2 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=2500;




AND ((STOC.STOCH_MIN_5_VAL_K1 <40 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 LIKE '%BUY%' AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT LIKE '%SELL%' OR HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT LIKE '%SELL%') AND BR.TRADABLE_STATE_ID = 'BUY' AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500) AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) < 5000))  OR (STOC.STOCH_MIN_5_VAL_K1 >60 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 LIKE '%SELL%'  AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT LIKE '%BUY%' OR HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT LIKE '%BUY%') AND BR.TRADABLE_STATE_ID = 'SELL' AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) > 100)  AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) < 7000)  )  ) AND BR.DT_STAMP > CURRENT_DATE - 2 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=500;

----------------------------------------------------------------------------------------------
select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_HEIKENASHI_DTL HEIEN ON BR.OPEN_RANGE_BREAK_OUT_ID = HEIEN.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID AND ((STOC.STOCH_MIN_5_VAL_K1 <40 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 LIKE '%BUY%' AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT LIKE '%SELL%' OR HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT LIKE '%SELL%') AND BR.TRADABLE_STATE_ID = 'BUY' AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 5) AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) < 15000))  OR (STOC.STOCH_MIN_5_VAL_K1 >60 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 LIKE '%SELL%'  AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT LIKE '%BUY%' OR HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT LIKE '%BUY%') AND BR.TRADABLE_STATE_ID = 'SELL' AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) > 10)  AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) < 17000)  )  ) AND  BR.DT_STAMP >= CURRENT_DATE - 3 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=500;
   --------------------------------------------------------PAGE 2-------------------------------------------------

   --------------------------------------------------------PAGE 3-------------------------------------------------
      --------------------------------------------------------PAGE 3-------------------------------------------------
	     --------------------------------------------------------PAGE 3-------------------------------------------------

select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND (( (STOC.STOCH_MIN_15_VAL_K1 <40 OR STOC.STOCH_MIN_60_VAL_K1 <40) AND BR.TRADABLE_STATE_ID = 'BUY' AND (DTL.CNDL_3_TYPE = 'G' AND DTL.CNDL_4_TYPE = 'R'))  OR ((STOC.STOCH_MIN_15_VAL_K1 >60 OR STOC.STOCH_MIN_60_VAL_K1 > 60)  AND BR.TRADABLE_STATE_ID = 'SELL'  AND (DTL.CNDL_3_TYPE = 'R' AND DTL.CNDL_4_TYPE = 'G') )  ) AND BR.DT_STAMP > CURRENT_DATE - 2 AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=2500;



select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND (( (STOC.STOCH_MIN_15_VAL_K1 <40 OR STOC.STOCH_MIN_60_VAL_K1 <40) AND BR.TRADABLE_STATE_ID = 'BUY')  OR ((STOC.STOCH_MIN_15_VAL_K1 >60 OR STOC.STOCH_MIN_60_VAL_K1 > 60)  AND BR.TRADABLE_STATE_ID = 'SELL' )  ) AND BR.DT_STAMP > CURRENT_DATE - 2 AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=2500;

select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND (( ((STOC.STOCH_MIN_15_VAL_K1 <40 AND STOC.STOCH_MIN_15_VAL_K1 > STOC.STOCH_MIN_15_VAL_D3)OR (STOC.STOCH_MIN_60_VAL_K1 <40 AND STOC.STOCH_MIN_60_VAL_K1 > STOC.STOCH_MIN_60_VAL_D3)) AND BR.TRADABLE_STATE_ID = 'BUY')  OR (((STOC.STOCH_MIN_15_VAL_K1 <40 AND STOC.STOCH_MIN_15_VAL_K1 < STOC.STOCH_MIN_15_VAL_D3)OR (STOC.STOCH_MIN_60_VAL_K1 <40 AND STOC.STOCH_MIN_60_VAL_K1 < STOC.STOCH_MIN_60_VAL_D3))  AND BR.TRADABLE_STATE_ID = 'SELL' )  ) AND BR.DT_STAMP > CURRENT_DATE - 2 AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=2500;



select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND (( ((STOC.STOCH_MIN_15_VAL_K1 <40 AND STOC.STOCH_MIN_15_VAL_D3 <40) OR (STOC.STOCH_MIN_60_VAL_K1 <40 AND STOC.STOCH_MIN_60_VAL_D3 <40)) AND BR.TRADABLE_STATE_ID = 'BUY')  OR ( ((STOC.STOCH_MIN_15_VAL_K1 >60 AND STOC.STOCH_MIN_15_VAL_D3 >60) OR (STOC.STOCH_MIN_60_VAL_K1 > 60 AND STOC.STOCH_MIN_60_VAL_D3 > 60))  AND BR.TRADABLE_STATE_ID = 'SELL' )  ) AND BR.DT_STAMP > CURRENT_DATE - 2 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=2500;
-----------------------------------------query implemented----------------------------
 select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID AND (( (STOC.STOCH_MIN_15_VAL_K1 <40 OR STOC.STOCH_MIN_60_VAL_K1 <40) AND BR.TRADABLE_STATE_ID = 'BUY')  OR ((STOC.STOCH_MIN_15_VAL_K1 >60 OR STOC.STOCH_MIN_60_VAL_K1 > 60)  AND BR.TRADABLE_STATE_ID = 'SELL' )  ) AND BR.DT_STAMP > CURRENT_DATE - 2 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=2500;
 -----------------------------------------query implemented----------------------------
 
select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID AND (( (STOC.STOCH_MIN_5_VAL_K1 <40 OR STOC.STOCH_MIN_15_VAL_K1 <40 OR STOC.STOCH_MIN_60_VAL_K1 <40) AND BR.TRADABLE_STATE_ID = 'BUY')  OR ((STOC.STOCH_MIN_5_VAL_K1 >60 OR STOC.STOCH_MIN_15_VAL_K1 >60 OR STOC.STOCH_MIN_60_VAL_K1 > 60)  AND BR.TRADABLE_STATE_ID = 'SELL' )  ) AND BR.DT_STAMP = CURRENT_DATE - 2 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=2500;
   --------------------------------------------------------PAGE 3-------------------------------------------------
      --------------------------------------------------------PAGE 3-------------------------------------------------
	     --------------------------------------------------------PAGE 3-------------------------------------------------


   --------------------------------------------------------PAGE 4-------------------------------------------------
 select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_HEIKENASHI_DTL HEIEN ON BR.OPEN_RANGE_BREAK_OUT_ID = HEIEN.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID AND 
 
 (	(STOC.STOCH_MIN_5_VAL_K1 <40 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 LIKE '%BUY%' AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT LIKE '%SELL%' OR HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT LIKE '%SELL%') AND BR.TRADABLE_STATE_ID = 'BUY' AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 50) AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) < 15000)  )  
 
 OR (STOC.STOCH_MIN_5_VAL_K1 >60 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 LIKE '%SELL%'  AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT LIKE '%BUY%' OR HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT LIKE '%BUY%') AND BR.TRADABLE_STATE_ID = 'SELL' AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) > 10)  AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) < 15000)  )  ) AND BR.DT_STAMP = CURRENT_DATE - 1 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=500; 
 
 
 
 
 
 
 
 
 select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_HEIKENASHI_DTL HEIEN ON BR.OPEN_RANGE_BREAK_OUT_ID = HEIEN.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID AND ((STOC.STOCH_MIN_5_VAL_K1 <40 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 IN ('BUY', 'HVSB', 'VVSB') AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT IN ('SELL', 'HVSS', 'VVSS') AND HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT IN ('SELL', 'HVSS', 'VVSS')) AND BR.TRADABLE_STATE_ID = 'BUY' AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 0) AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) < 15000))  OR (STOC.STOCH_MIN_5_VAL_K1 >60 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 IN ('SELL', 'HVSS', 'VVSS')  AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT IN ('BUY', 'HVSB', 'VVSB') AND HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT IN ('BUY', 'HVSB', 'VVSB') ) AND BR.TRADABLE_STATE_ID = 'SELL' AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) > 0)  AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) < 15000)  )  ) AND BR.DT_STAMP = CURRENT_DATE - 2 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=500;
 
 'BUY', 'HVSB', 'VVSB'
 'SELL', 'HVSS', 'VVSS' 
 
  select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_HEIKENASHI_DTL HEIEN ON BR.OPEN_RANGE_BREAK_OUT_ID = HEIEN.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID AND ((BR.TRADABLE_STATE_ID = 'BUY' AND STOC.STOCH_MIN_5_VAL_K1 <40 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 IN ('BUY', 'HVSB', 'VVSB') AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT IN ('SELL', 'HVSS', 'VVSS') AND HEIEN.HEIKIN_ASHI_TREND_MIN5  NOT IN ('SELL', 'HVSS', 'VVSS') AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 0) AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) < 15000)))  OR (BR.TRADABLE_STATE_ID = 'SELL' AND STOC.STOCH_MIN_5_VAL_K1 >60 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 IN ('SELL', 'HVSS', 'VVSS')  AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT IN ('BUY', 'HVSB', 'VVSB') AND HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT IN ('BUY', 'HVSB', 'VVSB') AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) > 0)  AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) < 15000)  )  ) ) AND BR.DT_STAMP = CURRENT_DATE - 2 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=500;
  
  select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_HEIKENASHI_DTL HEIEN ON BR.OPEN_RANGE_BREAK_OUT_ID = HEIEN.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_STOCHASTIC_DTL STOC ON BR.OPEN_RANGE_BREAK_OUT_ID = STOC.OPEN_RANGE_BREAK_OUT_ID AND ((STOC.STOCH_MIN_5_VAL_K1 <40 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 LIKE '%BUY%' AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT LIKE '%SELL%' AND HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT LIKE '%SELL%') AND BR.TRADABLE_STATE_ID = 'BUY' AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 0) AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) < 15000))  OR (STOC.STOCH_MIN_5_VAL_K1 >60 AND HEIEN.HEIKIN_ASHI_TREND_MIN60 LIKE '%SELL%'  AND (HEIEN.HEIKIN_ASHI_TREND_MIN15 NOT LIKE '%BUY%' AND HEIEN.HEIKIN_ASHI_TREND_MIN5 NOT LIKE '%BUY%') AND BR.TRADABLE_STATE_ID = 'SELL' AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) > 0)  AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) < 15000)  )  ) AND BR.DT_STAMP = CURRENT_DATE - 1 AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=500;
   --------------------------------------------------------PAGE 4-------------------------------------------------

   
  --------------------------------------------------------PAGE 5-------------------------------------------------
SELECT entity FROM com.tradeware.clouddatabase.entity.StrategyOrbEntity entity WHERE 

(	

(entity.strategyOrbStochasticEntity.min5StochasticValK1 < 40 AND entity.strategyOrbHeikenAshiEntity.heikinAshiTrendIdMin60 IN ('BUY', 'HVSB', 'VVSB') AND 

(entity.strategyOrbHeikenAshiEntity.heikinAshiTrendIdMin15 NOT IN ('SELL', 'HVSS', 'VVSS') AND entity.strategyOrbHeikenAshiEntity.heikinAshiTrendIdMin5 NOT IN ('SELL', 'HVSS', 'VVSS') ) 


AND (entity.tradableStateId = 'BUY' 	(((entity.buyAtVal - entity.vwapValue) * (entity.lotSize)) > 0) AND (((entity.buyAtVal - entity.vwapValue) * (entity.lotSize)) < 15000) ) 

) 


OR (entity.strategyOrbStochasticEntity.min5StochasticValK1 > 60 AND entity.strategyOrbHeikenAshiEntity.heikinAshiTrendIdMin60 IN ('SELL', 'HVSS', 'VVSS') AND (entity.strategyOrbHeikenAshiEntity.heikinAshiTrendIdMin15 NOT IN ('BUY', 'HVSB', 'VVSB') AND entity.strategyOrbHeikenAshiEntity.heikinAshiTrendIdMin5 NOT IN ('BUY', 'HVSB', 'VVSB') ) AND (entity.tradableStateId = 'SELL' 	(((entity.vwapValue - entity.sellAtVal) * (entity.lotSize)) > 0) AND (((entity.vwapValue - entity.sellAtVal) * (entity.lotSize)) < 15000) ) )  ) 


AND entity.buyerSellerDiffVal <= 500 AND entity.buyerSellerDiffVal2 <= 750 AND entity.gapUpDownMoveVal <= 500 AND entity.tradedDateStamp = :tradedDateStamp AND entity.candleNumber <= :candleNumber ORDER BY entity.tradedAtDtTm desc
--------------------------------------------------------PAGE 5-------------------------------------------------

--------------------------------------------------------PAGE 6-------------------------------------------------
  select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST HIST ON BR.OPEN_RANGE_BREAK_OUT_ID = HIST.OPEN_RANGE_BREAK_OUT_ID AND (HIST.CURRENT_CNDL_OPEN >  HIST.CNDL_AVG_LOW_1_MIN AND HIST.CURRENT_CNDL_OPEN < HIST.CNDL_AVG_HIH_1_MIN) AND ((BR.TRADABLE_STATE_ID = 'BUY' AND HIST.CURRENT_CNDL_OPEN > HIST.CNDL_AVG_CLOSE_1_MIN AND HIST.CURRENT_CNDL_OPEN > BR.VWAP_VAL AND ((( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 0) AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) < 7500)) ) OR (BR.TRADABLE_STATE_ID = 'SELL' AND HIST.CURRENT_CNDL_OPEN < HIST.CNDL_AVG_CLOSE_1_MIN AND HIST.CURRENT_CNDL_OPEN < BR.VWAP_VAL AND ((( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) > 0)  AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) < 7500)) )) AND BR.DT_STAMP > CURRENT_DATE - 30 AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=2500;
 
 
 
select count(*), SUM(BR.PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST HIST ON BR.OPEN_RANGE_BREAK_OUT_ID = HIST.OPEN_RANGE_BREAK_OUT_ID AND (HIST.CURRENT_CNDL_OPEN >  HIST.CNDL_AVG_LOW_1_MIN AND HIST.CURRENT_CNDL_OPEN < HIST.CNDL_AVG_HIH_1_MIN) AND ((BR.TRADABLE_STATE_ID = 'BUY' AND HIST.CURRENT_CNDL_OPEN > HIST.CNDL_AVG_CLOSE_1_MIN AND HIST.CURRENT_CNDL_OPEN > BR.VWAP_VAL AND ((( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 0) AND (( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) < 7500)) ) OR (BR.TRADABLE_STATE_ID = 'SELL' AND HIST.CURRENT_CNDL_OPEN < HIST.CNDL_AVG_CLOSE_1_MIN AND HIST.CURRENT_CNDL_OPEN < BR.VWAP_VAL AND ((( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) > 0)  AND (( (BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) < 7500)) )) AND BR.DT_STAMP > CURRENT_DATE - 30 AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=2500;
--------------------------------------------------------PAGE 6-------------------------------------------------



select count(*), SUM(PROF_LOS_AMT_VAL), SUM(POS_MOVE_VAL), SUM (NEG_MOVE_VAL) from T_OPEN_RANGE_BREAK_OUT  BR INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_VWAP_VOLUME_DETAIL VWAP ON BR.OPEN_RANGE_BREAK_OUT_ID =  VWAP.OPEN_RANGE_BREAK_OUT_ID AND DT_STAMP > CURRENT_DATE -52 AND DT_STAMP < CURRENT_DATE -45 AND TRADABLE_STATE_ID IN ('BUY', 'SELL') AND ( (TRADABLE_STATE_ID='BUY' AND (DTL.CNDL_3_HIG_MINUS_CLS < DTL.CNDL_3_CLS_MINUS_LOW AND DTL.CNDL_4_HIG_MINUS_CLS < DTL.CNDL_4_CLS_MINUS_LOW) AND VWAP.CNDL_4_VOL > (VWAP.CNDL_3_VOL * 1)) OR (TRADABLE_STATE_ID='SELL' AND (DTL.CNDL_3_HIG_MINUS_CLS > DTL.CNDL_3_CLS_MINUS_LOW AND DTL.CNDL_4_HIG_MINUS_CLS > DTL.CNDL_4_CLS_MINUS_LOW)  AND (VWAP.CNDL_4_VOL * 1) < VWAP.CNDL_3_VOL)) AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=2500 AND BR.DAY_LVL_TRADE_IND = true;


select count(*), SUM(PROF_LOS_AMT_VAL), SUM(POS_MOVE_VAL), SUM (NEG_MOVE_VAL) from T_OPEN_RANGE_BREAK_OUT  BR INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_VWAP_VOLUME_DETAIL VWAP ON BR.OPEN_RANGE_BREAK_OUT_ID =  VWAP.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID AND DT_STAMP > CURRENT_DATE -5 AND TRADABLE_STATE_ID IN ('BUY', 'SELL') AND ( (TRADABLE_STATE_ID='BUY' AND (OHLC.LOW_3 < OHLC.LOW_4 OR OHLC.HIGH_3 < OHLC.HIGH_4) AND VWAP.CNDL_4_VOL > (VWAP.CNDL_3_VOL * 1)) OR (TRADABLE_STATE_ID='SELL' AND (OHLC.LOW_3 > OHLC.LOW_4 OR OHLC.HIGH_3 > OHLC.HIGH_4)  AND (VWAP.CNDL_4_VOL * 1) < VWAP.CNDL_3_VOL)) AND BR.BUY_SELL_DIFF_VAL <= 500 AND BR.BUY_SELL_DIFF_VAL_2 <= 700 AND  BR.GAP_UP_DOWN_MOVE_VAL <=2500;



select count(*), SUM(PROF_LOS_AMT_VAL), SUM(POS_MOVE_VAL), SUM (NEG_MOVE_VAL) from T_OPEN_RANGE_BREAK_OUT  BR INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_VWAP_VOLUME_DETAIL VWAP ON BR.OPEN_RANGE_BREAK_OUT_ID =  VWAP.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_STOCHASTIC_DTL ST ON BR.OPEN_RANGE_BREAK_OUT_ID =  ST.OPEN_RANGE_BREAK_OUT_ID AND DT_STAMP > CURRENT_DATE -5 AND TRADABLE_STATE_ID IN ('BUY', 'SELL') AND ( (TRADABLE_STATE_ID='BUY' AND (DTL.CNDL_LOWS_DIFF > (DTL.CNDL_HIGHS_DIFF * 1)) AND VWAP.CNDL_4_VOL > VWAP.CNDL_3_VOL) OR (TRADABLE_STATE_ID='SELL' AND ((DTL.CNDL_LOWS_DIFF * 1) < DTL.CNDL_HIGHS_DIFF) )  AND VWAP.CNDL_4_VOL < VWAP.CNDL_3_VOL) AND ST.STOCH_BASIC_RULE1_IND = true AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=2500 AND BR.PROF_LOS_AMT_VAL < 0;


 
 













































