https://markets.businessinsider.com/indices
https://www1.nseindia.com/live_market/dynaContent/live_watch/VixDetails.json

INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('NA', 'NA', 'Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BUY', 'BUY', 'Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SELL', 'SELL', 'Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BEPR', 'BUY_EXIT_PROFIT', 'Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SEPR', 'SELL_EXIT_PROFIT', 'Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BELS', 'BUY_EXIT_LOSS', 'Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SELS', 'SELL_EXIT_LOSS', 'Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BEPF', 'BUY_EXIT_PROFIT_FROCE', 'Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SEPF', 'SELL_EXIT_PROFIT_FROCE', 'Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BELF', 'BUY_EXIT_LOSS_FROCE', 'Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SELF', 'SELL_EXIT_LOSS_FROCE', 'Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('CNOM', 'CANDLE_OVER_MOVED', 'Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('CNSM', 'CANDLE_MOVE_FAILED(SMALL_CNDL)', 'Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SMCN', 'CANDLE_MOVE_FAILED(SMALL_CNDL)', 'Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BSDF', 'BUYER_SELLER_DIFF_FAILED', 'Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('OHRB', 'OHLC_RULE_BREAK', 'OHLC States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('OBSB', 'OHLC_BUY_SELL_BREAK', 'OHLC States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BYSP', 'BUY_SPIKE', 'OHLC States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SLSP', 'SELL_SPIKE', 'OHLC States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BSP1', 'BUY_SPIKE(1)', 'OHLC States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SSP1', 'SELL_SPIKE(1)', 'OHLC States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BS1P', 'BUY_SPIKE(1.5)', 'OHLC States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SS1P', 'SELL_SPIKE(1.5)', 'OHLC States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BSP2', 'BUY_SPIKE(2)', 'OHLC States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SSP2', 'SELL_SPIKE(2)', 'OHLC States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BS2P', 'BUY_SPIKE(2.5)', 'OHLC States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SS2P', 'SELL_SPIKE(2.5)', 'OHLC States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BSS3', 'BUY/SELL_SPIK>3', 'OHLC States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SSP3', 'BUY/SELL_SPIK>3', 'OHLC States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SLRC', 'SELL_RED_CNDL', 'Strengthable Trading States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BYRC', 'BUY_RED_CNDL', 'trengthable Trading States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BYGC', 'BUY_GREEN_CNDL', 'trengthable Trading States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SLGC', 'SELL_GREEN_CNDL', 'trengthable Trading States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('STNA', 'NA', 'Strengthable Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('TBSB', 'OHLC_BUY_SELL_BREAK', 'OHLC States', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('CNMF', 'CANDLE_OVER_MOVED', ' Trading states', CURRENT_TIMESTAMP);


INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BEMP', 'BUY_EXIT_MNAL_PRF', ' Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SEMP', 'SELL_EXIT_MNAL_PRF', ' Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('BEML', 'BUY_EXIT_MNAL_LOS', ' Trading states', CURRENT_TIMESTAMP);
INSERT INTO T_TRADE_STATE_LOOKUP(TRADE_STATE_ID, TRADE_STATE_DESC, TRADE_STATE_CATEGORY, DT_TM_STAMP) VALUES('SEML', 'SELL_EXIT_MNAL_LOS', ' Trading states', CURRENT_TIMESTAMP);

OHRB

NA
BUY
SELL
BUY_EXIT_PROFIT
SELL_EXIT_PROFIT
BUY_EXIT_LOSS
SELL_EXIT_LOSS
BUY_EXIT_PROFIT_FROCE
SELL_EXIT_PROFIT_FROCE
BUY_EXIT_LOSS_FROCE
SELL_EXIT_LOSS_FROCE
CANDLE_OVER_MOVED
CANDLE_MOVE_FAILED(SMALL_CNDL)
BUYER_SELLER_DIFF_FAILED

OHLC_RULE_BREAK
OHLC_BUY_SELL_BREAK
 BUY_SPIKE
 SELL_SPIKE
BUY_SPIKE(1)
SELL_SPIKE(1)
 BUY_SPIKE(1.5)
 SELL_SPIKE(1.5)
 BUY_SPIKE(2)
 SELL_SPIKE(2)
 BUY_SPIKE(2.5)
 SELL_SPIKE(2.5)
 BUY/SELL_SPIK>3

BUY_GREEN_CNDL
BUY_RED_CNDL
SELL_GREEN_CNDL
SELL_RED_CNDL

BSDF
bean.setprevDayHigh;
bean.setprevDayLow;
bean.setprevDayPercentageChange;
bean.setstrengthableTradeInfo;
bean.setvwapTradeStateId;
bean.setvwapTradeDescription;
bean.setvwapTradeVolInfo;
bean.setvwapTradeVolRatioInfo;
bean.setlastCndleOhlcVal;
bean.setvolumeTradeStateId;
bean.setvolumeTradeStateDescription;


 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'NA', 'NA', 'Volume strength Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'BUY', 'BUY_VOL_INCREASE', 'Volume strength Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'SELL', 'SELL_VOL_DECREASE', 'Volume strength Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'BUY2', 'BUY_2TIMES_VOLUMES', 'Volume strength Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'SEL2', 'SELL_2TIMES_VOLUMES', 'Volume strength Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'BUY3', 'BUY_3TIMES_VOLUMES', 'Volume strength Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'SEL3', 'SELL_3TIMES_VOLUMES', 'Volume strength Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'BUY4', 'BUY_4TIMES_VOLUMES', 'Volume strength Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'SEL4', 'SELL_4TIMES_VOLUMES', 'Volume strength Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'BUY5', 'BUY_5TIMES_VOLUMES', 'Volume strength Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'SEL5', 'SELL_5TIMES_VOLUMES', 'Volume strength Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'BUY6', 'BUY_6TIMES_VOLUMES', 'Volume strength Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'SEL6', 'SELL_6TIMES_VOLUMES', 'Volume strength Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'BUY7', 'BUY_7TIMES_VOLUMES', 'Volume strength Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'SEL7', 'SELL_7TIMES_VOLUMES', 'Volume strength Trading States', CURRENT_TIMESTAMP);


 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'VBUY', 'VWAP_BUY', 'VWAP Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'VSEL', 'VWAP_SELL', 'VWAP  Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'SBUY', 'VWAP_STRONG_BUY', 'VWAP  Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'SSEL', 'VWAP_STRONG_SELL', 'VWAP  Trading States', CURRENT_TIMESTAMP);

 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'VWNA', 'NA', 'VWAP  Trading States', CURRENT_TIMESTAMP);

 TBSB
 BUY
 SEPR
 BSDF
 BEPR
 BEPF
 SELL
 SELS
 CNMF
 BELS
 BELF
 SEPF
 SMCN
 SELF
 
  INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'VVSB', 'VV_STRONG_BUY', 'HeikinAshi Trading States', CURRENT_TIMESTAMP);
  INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'HVSB', 'V_STRONG_BUY', 'HeikinAshi Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'HSBC', 'STRONG_BUY_CLOSE', 'HeikinAshi Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'HSBO', 'STRONG_BUY_OPEN', 'HeikinAshi Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'VVSS', 'VV_STRONG_SELL', 'HeikinAshi Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'HVSS', 'V_STRONG_SELL', 'HeikinAshi Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'HSSC', 'STRONG_SELL_CLOSE', 'HeikinAshi Trading States', CURRENT_TIMESTAMP);
 INSERT INTO T_VOLUME_TREND_LOOKUP(VOLUME_TREND_ID, VOLUME_TREND_DESC, VOLUME_TREND_CATEGORY, DT_TM_STAMP) VALUES(
'HSSO', 'STRONG_SELL_OPEN', 'HeikinAshi Trading States', CURRENT_TIMESTAMP);
 

VV_STRONG_BUY = "VVSB";
 V_STRONG_BUY = "HVSB";
 STRONG_BUY_CLOSE = "HSBC";
 STRONG_BUY_OPEN = "HSBO";
 VV_STRONG_SELL = "VVSS";
 V_STRONG_SELL = "HVSS";
 STRONG_SELL_CLOSE = "HSSC";
 STRONG_SELL_OPEN = "HSSO";
 
 
 select count(*), SUM(PROF_LOS_AMT_VAL) from T_OPEN_RANGE_BREAK_OUT where BUY_SELL_DIFF_VAL <= 200 AND BUY_SELL_DIFF_VAL_2 < 200 AND TRADABLE_STATE IN ('BUY', 'SELL') AND STRATEGY_RULE IN  ('ORB_R2', 'NR7_R2', 'NR7','NR7_R1','ORB_R1') AND CAST(DT_TM_STAMP AS DATE) = '2021-04-08';

select OHLC_STATE, STRATEGY_RULE, PROF_LOS_AMT_VAL, TRADABLE_STATE from T_OPEN_RANGE_BREAK_OUT where BUY_SELL_DIFF_VAL <= 200 AND BUY_SELL_DIFF_VAL_2 <= 250 AND TRADABLE_STATE IN ('BUY', 'SELL') AND STRATEGY_RULE IN  ('ORB_R2', 'NR7_R2', 'NR7','NR7_R1','ORB_R1') AND OHLC_STATE IN ('BUY', 'SELL', 'BUY_SPIKE(1)', 'BUY_SPIKE(1.5)', 'BUY_SPIKE(2)', 'BUY_SPIKE(2.5)') AND CAST(DT_TM_STAMP AS DATE) = '2021-04-08';

DT_STAMP

TRADED_AT_DT_TM
tobd41ZzEVd3Sm7bYO7B74sDVAZXrsAs


    <dependency>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <version>3.8.1</version>
      <type>maven-plugin</type>
    </dependency>

delete from T_ORB_MULTI_LVL_TRADE where OPEN_RANGE_BREAK_OUT_ID IN (select OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT where DT_STAMP = current_date);
delete from T_ORB_PREV_CNDL_AVG_HIST where OPEN_RANGE_BREAK_OUT_ID IN (select OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT where DT_STAMP = current_date);
delete from T_ORB_PREV_CNDL_DETAIL where OPEN_RANGE_BREAK_OUT_ID IN (select OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT where DT_STAMP = current_date);
delete from T_ORB_PREV_CNDL_OHLC where OPEN_RANGE_BREAK_OUT_ID IN (select OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT where DT_STAMP = current_date);
delete from T_ORB_PREV_DAY_HIST where OPEN_RANGE_BREAK_OUT_ID IN (select OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT where DT_STAMP = current_date);
delete from T_ORB_TECH_INDICATOR_DTL where OPEN_RANGE_BREAK_OUT_ID IN (select OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT where DT_STAMP = current_date);
delete from T_ORB_TRADE_RULE where OPEN_RANGE_BREAK_OUT_ID IN (select OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT where DT_STAMP = current_date);
delete from T_ORB_VWAP_VOLUME_DETAIL where OPEN_RANGE_BREAK_OUT_ID IN (select OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT where DT_STAMP = current_date);
delete from t_orb_stochastic_dtl where OPEN_RANGE_BREAK_OUT_ID IN (select OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT where DT_STAMP = current_date);
delete from t_orb_heikenashi_dtl where OPEN_RANGE_BREAK_OUT_ID IN (select OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT where DT_STAMP = current_date);
delete from T_OPEN_RANGE_BREAK_OUT where DT_STAMP = current_date;



SELECT PROF_LOS_AMT_VAL from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.DT_STAMP > CURRENT_DATE-1;


SELECT count(*), SUM(PROF_LOS_AMT_VAL), ((SUM(PROF_LOS_AMT_VAL)) + (count(*) * 150)) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.DT_STAMP > CURRENT_DATE-1;


SELECT count(*), SUM(PROF_LOS_AMT_VAL), ((SUM(PROF_LOS_AMT_VAL)) + (count(*) * 150)) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND CNDL_OPEN_BETWEEN_AVG_HI_LO_CLS_AND_VWAP_IND = true GROUP BY DT_STAMP ORDER BY DT_STAMP DESC;


SELECT count(*), SUM(PROF_LOS_AMT_VAL), ((SUM(PROF_LOS_AMT_VAL)) + (count(*) * 150)) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND CNDL_OPEN_BETWEEN_AVG_HI_LO_CLS_AND_VWAP_IND = true GROUP BY DT_STAMP ORDER BY DT_STAMP DESC;

SELECT DT_STAMP, count(*), SUM(PROF_LOS_AMT_VAL), ((SUM(PROF_LOS_AMT_VAL)) + (count(*) * 150)) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true GROUP BY DT_STAMP ORDER BY DT_STAMP DESC;


SELECT DT_STAMP, count(*), SUM(PROF_LOS_AMT_VAL), ((SUM(PROF_LOS_AMT_VAL)) - (count(*) * 150)) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADABLE_RULE LIKE '%INIT_PROFITABLE_PROD_RULE%' GROUP BY DT_STAMP ORDER BY DT_STAMP DESC;\

***********************PROFIT********
SELECT ((SUM(PROF_LOS_AMT_VAL)) - (count(*) * 150)) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND ((RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_1_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_1_MIN) AND ( (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_1_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) OR (BR.TRADABLE_STATE_ID = 'SELL' AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_CLOSE_1_MIN AND RULE.CURRENT_CNDL_OPEN < BR.VWAP_VAL)) )  AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000;


 SELECT DT_STAMP, count(*), SUM(PROF_LOS_AMT_VAL), ((SUM(PROF_LOS_AMT_VAL)) - (count(*) * 150)) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' GROUP BY DT_STAMP ORDER BY DT_STAMP DESC;

  SELECT DT_STAMP, count(*), SUM(PROF_LOS_AMT_VAL), ((SUM(PROF_LOS_AMT_VAL)) - (count(*) * 150)) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' GROUP BY DT_STAMP ORDER BY DT_STAMP DESC;
 
 SELECT DT_STAMP, count(*), SUM(PROF_LOS_AMT_VAL), ((SUM(PROF_LOS_AMT_VAL)) - (count(*) * 150)) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000 GROUP BY DT_STAMP ORDER BY DT_STAMP DESC;


***********************PROFIT********


**************PROFIT 5 minute********

SELECT BR.T_OPEN_RANGE_BREAK_OUT from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND ( (RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_5_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_5_MIN) AND ( (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) OR (BR.TRADABLE_STATE_ID = 'SELL' AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN < BR.VWAP_VAL)) ) AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND BR.DT_STAMP > CURRENT_DATE -22 ORDER BY BR.TRADED_AT_DT_TM DESC;


UPDATE T_ORB_TRADE_RULE SET TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true WHERE OPEN_RANGE_BREAK_OUT_ID IN (SELECT BR.OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND ( (RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_5_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_5_MIN) AND ( (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) OR (BR.TRADABLE_STATE_ID = 'SELL' AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN < BR.VWAP_VAL)) ) AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <1000 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -55 ORDER BY BR.TRADED_AT_DT_TM DESC)

*****************88

--------------Great profit--------------------------
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -55 AND
tradeware_systems-# DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500;


SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 750 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000 AND BR.DT_STAMP > CURRENT_DATE -55  AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500;


--------------Great profit--------------------------



--------------Greatest profit ***************--------------------------
SELECT BR.BUY_SELL_DIFF_VAL, BR.BUY_SELL_DIFF_VAL_2, BR.BUY_SELL_DIFF_VAL_3, BR.SYMBOL_NAME, BR.POS_MOVE_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 1000 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 1000 AND BR.DT_STAMP > CURRENT_DATE -13 AND BR.OPEN_RANGE_BREAK_OUT_ID IN ( SELECT BR.OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND
DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500);


SELECT count(*), (SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 750 AND BR.DT_STAMP > CURRENT_DATE -15
UNION ALL
SELECT count(*), (SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND
DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500;


SELECT BR.OPEN_RANGE_BREAK_OUT_ID AS ID, BR.DT_STAMP, BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 750 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 750 AND BR.DT_STAMP > CURRENT_DATE -13 
UNION ALL
SELECT BR.OPEN_RANGE_BREAK_OUT_ID AS ID, BR.DT_STAMP, BR.SYMBOL_NAME, BR.TRADABLE_STATE_ID, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND
DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500;





SELECT BR.OPEN_RANGE_BREAK_OUT_ID AS ID, BR.DT_STAMP, BR.SYMBOL_NAME, BR.BUY_SELL_DIFF_VAL AS BSD_1, BR.BUY_SELL_DIFF_VAL_2 AS BSD_2, BR.BUY_SELL_DIFF_VAL_3 AS BSD_3, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500
UNION ALL
SELECT BR.OPEN_RANGE_BREAK_OUT_ID AS ID, BR.DT_STAMP, BR.SYMBOL_NAME, BR.BUY_SELL_DIFF_VAL AS BSD_1, BR.BUY_SELL_DIFF_VAL_2 AS BSD_2, BR.BUY_SELL_DIFF_VAL_3 AS BSD_3, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF  from from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND
DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500;

Same query for total
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -15 AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500
UNION ALL
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -15 AND
DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500;
--------------Greatest profit ***************--------------------------

SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND ((RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_1_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_1_MIN) AND (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_1_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) )  AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 750 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 750 AND BR.DT_STAMP > CURRENT_DATE -13

Logical
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 750 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 750 AND BR.DT_STAMP > CURRENT_DATE -13

------------------------------------------------------------
--------------------------------------------------------------
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -15 AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500
UNION ALL
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -15 AND
DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500;
------------------------------------------------------------
--------------------------------------------------------------


--------------------------------------------------------------------------------------------------------
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) AS FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID AND ((RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_1_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_1_MIN) AND (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_1_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) )  AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 750 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 750 AND BR.DT_STAMP > CURRENT_DATE -13

Logical
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 750 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 750 AND BR.DT_STAMP > CURRENT_DATE -13

---------**********8-----------------************8------------
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND (RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_1_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_1_MIN) AND (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_1_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500
------------------******8888----------************8-------------------

SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND
DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500



SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND (RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_5_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_5_MIN) AND (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_5_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -17 AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500

-------------------------------------------------

SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND (RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_LOW_1_MIN AND RULE.CURRENT_CNDL_OPEN < RULE.CNDL_AVG_HIH_1_MIN) AND (BR.TRADABLE_STATE_ID = 'BUY' AND RULE.CURRENT_CNDL_OPEN > RULE.CNDL_AVG_CLOSE_1_MIN AND RULE.CURRENT_CNDL_OPEN > BR.VWAP_VAL) AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -17 AND DTL.CNDL_4_SIZE < 3000 AND DTL.CNDL_4_SIZE > 500

 -------------------------------------------------------------------------------------------
 
 SELECT DT_STAMP,count,PROF_LOS from(SELECT BR.DT_STAMP, count(*) AS count, SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) AS PROF_LOS from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500 GROUP BY DT_STAMP
UNION ALL
SELECT BR.DT_STAMP, count(*) AS count, SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) AS PROF_LOS from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND
DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500 GROUP BY DT_STAMP ) AS foo ORDER BY DT_STAMP DESC;


---------------
SELECT ID, DT_STAMP, SYMBOL_NAME, BSD_1, BSD_2, BSD_3, POS_MOVE_VAL, PROF_LOS_AMT_VAL, FINAL_PROF from (SELECT BR.OPEN_RANGE_BREAK_OUT_ID AS ID, BR.DT_STAMP, BR.SYMBOL_NAME, BR.BUY_SELL_DIFF_VAL AS BSD_1, BR.BUY_SELL_DIFF_VAL_2 AS BSD_2, BR.BUY_SELL_DIFF_VAL_3 AS BSD_3, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500
UNION ALL
SELECT BR.OPEN_RANGE_BREAK_OUT_ID AS ID, BR.DT_STAMP, BR.SYMBOL_NAME, BR.BUY_SELL_DIFF_VAL AS BSD_1, BR.BUY_SELL_DIFF_VAL_2 AS BSD_2, BR.BUY_SELL_DIFF_VAL_3 AS BSD_3, BR.POS_MOVE_VAL, BR. PROF_LOS_AMT_VAL, (BR.PROF_LOS_AMT_VAL -150) FINAL_PROF from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <500 AND BR.TRADABLE_STATE_ID = 'BUY' AND ( (BR.BUY_AT_VAL-BR.VWAP_VAL) * BR.LOT_SIZE) > 500 AND BR.DT_STAMP > CURRENT_DATE -13 AND DTL.CNDL_4_SIZE < 2000 AND DTL.CNDL_4_SIZE > 500) AS foo ORDER BY DT_STAMP DESC;





-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND
tradeware_systems-# (OHLC.HIGH_3 > OHLC.HIGH_4 AND ( (DTL.CNDL_3_TYPE = 'G' AND OHLC.CLOSE_3 >= OHLC.CLOSE_4 AND  OHLC.CLOSE_3 >= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.CLOSE_4 ) OR (DTL.CNDL_3_TYPE = 'R' AND OHLC.OPEN_3 >= OHLC.CLOSE_4 AND  OHLC.OPEN_3 >= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.CLOSE_4 ) ) ) AND ( (DTL.CNDL_3_TYPE = 'G' AND DTL.CNDL_4_TYPE = 'R'  AND BR.TRADABLE_STATE_ID = 'BUY')
tradeware_systems(# OR (DTL.CNDL_3_TYPE = 'R' AND DTL.CNDL_4_TYPE = 'G'  AND BR.TRADABLE_STATE_ID = 'SELL') )    AND BR.DT_STAMP > CURRENT_DATE -20 AND BR.BUY_SELL_DIFF_VAL < 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500;
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
------------------------
-----------------------------
----------------------------------
forwardEngulginRuleTrades

SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND 
(OHLC.HIGH_3 > OHLC.HIGH_4 AND ( (DTL.CNDL_3_TYPE = 'G' AND OHLC.CLOSE_3 >= OHLC.CLOSE_4 AND  OHLC.CLOSE_3 >= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.CLOSE_4 ) OR (DTL.CNDL_3_TYPE = 'R' AND OHLC.OPEN_3 >= OHLC.CLOSE_4 AND  OHLC.OPEN_3 >= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.CLOSE_4 ) ) ) AND ( (DTL.CNDL_3_TYPE = 'G' AND DTL.CNDL_4_TYPE = 'R'  AND BR.TRADABLE_STATE_ID = 'BUY')
OR (DTL.CNDL_3_TYPE = 'R' AND DTL.CNDL_4_TYPE = 'G'  AND BR.TRADABLE_STATE_ID = 'SELL') )    AND BR.DT_STAMP > CURRENT_DATE -16 AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=1500 AND BR.CNDL_NUM < 24;

UPDATE T_ORB_TRADE_RULE SET TRADE_ON_FWD_ENGULFING_IND = true WHERE OPEN_RANGE_BREAK_OUT_ID IN (SELECT BR.OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND 
(OHLC.HIGH_3 > OHLC.HIGH_4 AND ( (DTL.CNDL_3_TYPE = 'G' AND OHLC.CLOSE_3 >= OHLC.CLOSE_4 AND  OHLC.CLOSE_3 >= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.CLOSE_4 ) OR (DTL.CNDL_3_TYPE = 'R' AND OHLC.OPEN_3 >= OHLC.CLOSE_4 AND  OHLC.OPEN_3 >= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.CLOSE_4 ) ) ) AND ( (DTL.CNDL_3_TYPE = 'G' AND DTL.CNDL_4_TYPE = 'R'  AND BR.TRADABLE_STATE_ID = 'BUY')
OR (DTL.CNDL_3_TYPE = 'R' AND DTL.CNDL_4_TYPE = 'G'  AND BR.TRADABLE_STATE_ID = 'SELL') ) AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=1500 )



------------------------
-----------------------------
----------------------------------forwardEngulginRuleTrades level 2----------------------------------

SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND 
(OHLC.HIGH_3 > OHLC.HIGH_4 AND ( (DTL.CNDL_3_TYPE = 'G' AND OHLC.CLOSE_3 >= OHLC.CLOSE_4 AND  OHLC.CLOSE_3 >= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.CLOSE_4 ) OR (DTL.CNDL_3_TYPE = 'R' AND OHLC.OPEN_3 >= OHLC.CLOSE_4 AND  OHLC.OPEN_3 >= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.CLOSE_4 ) ) ) AND ( (DTL.CNDL_3_TYPE = 'G' AND DTL.CNDL_4_TYPE = 'R'  AND BR.TRADABLE_STATE_ID = 'BUY' AND OHLC.LOW_4 >= OHLC.OPEN_3) OR (DTL.CNDL_3_TYPE = 'R' AND DTL.CNDL_4_TYPE = 'G'  AND BR.TRADABLE_STATE_ID = 'SELL'  AND OHLC.HIGH_4 <= OHLC.OPEN_3) )    AND BR.DT_STAMP > CURRENT_DATE -21 AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=15000 AND BR.CNDL_NUM < 24;

UPDATE T_ORB_TRADE_RULE SET TRADE_ON_FWD_ENGULFING_LVL2_IND = true WHERE OPEN_RANGE_BREAK_OUT_ID IN (SELECT BR.OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND 
(OHLC.HIGH_3 > OHLC.HIGH_4 AND ( (DTL.CNDL_3_TYPE = 'G' AND OHLC.CLOSE_3 >= OHLC.CLOSE_4 AND  OHLC.CLOSE_3 >= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.CLOSE_4 ) OR (DTL.CNDL_3_TYPE = 'R' AND OHLC.OPEN_3 >= OHLC.CLOSE_4 AND  OHLC.OPEN_3 >= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.CLOSE_4 ) ) ) AND ( (DTL.CNDL_3_TYPE = 'G' AND DTL.CNDL_4_TYPE = 'R'  AND BR.TRADABLE_STATE_ID = 'BUY' AND OHLC.LOW_4 >= OHLC.OPEN_3) OR (DTL.CNDL_3_TYPE = 'R' AND DTL.CNDL_4_TYPE = 'G'  AND BR.TRADABLE_STATE_ID = 'SELL'  AND OHLC.HIGH_4 <= OHLC.OPEN_3) ) AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=1500; 

------------------------
-----------------------------
----------------------------------

----------------------------------forwardEngulginRuleTrades level 3----------------------------------
SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND 
(OHLC.HIGH_3 > OHLC.HIGH_4 AND ( (DTL.CNDL_3_TYPE = 'G' AND OHLC.CLOSE_3 >= OHLC.CLOSE_4 AND  OHLC.CLOSE_3 >= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.CLOSE_4 ) OR (DTL.CNDL_3_TYPE = 'R' AND OHLC.OPEN_3 >= OHLC.CLOSE_4 AND  OHLC.OPEN_3 >= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.CLOSE_4 ) ) ) AND ( (DTL.CNDL_3_TYPE = 'G' AND DTL.CNDL_4_TYPE = 'R'  AND BR.TRADABLE_STATE_ID = 'BUY' AND OHLC.LOW_4 >= OHLC.OPEN_3 AND BR.BUY_AT_VAL>=BR.VWAP_VAL) OR (DTL.CNDL_3_TYPE = 'R' AND DTL.CNDL_4_TYPE = 'G'  AND BR.TRADABLE_STATE_ID = 'SELL'  AND OHLC.HIGH_4 <= OHLC.OPEN_3 AND BR.VWAP_VAL >= BR.SELL_AT_VAL) )    AND BR.DT_STAMP > CURRENT_DATE -27 AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=1500 AND BR.CNDL_NUM < 24



AND ( (BR.BUY_AT_VAL>=BR.VWAP_VAL) OR (((BR.BUY_AT_VAL - BR.VWAP_VAL)*BR.LOT_SIZE) >=5000))

AND ( (BR.VWAP_VAL >= BR.SELL_AT_VAL) OR (((BR.SELL_AT_VAL-BR.VWAP_VAL)*BR.LOT_SIZE) >=5000))

SELECT count(*), SUM(PROF_LOS_AMT_VAL) - (count(*) * 150)  from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND 
(OHLC.HIGH_3 > OHLC.HIGH_4 AND ( (DTL.CNDL_3_TYPE = 'G' AND OHLC.CLOSE_3 >= OHLC.CLOSE_4 AND  OHLC.CLOSE_3 >= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.CLOSE_4 ) OR (DTL.CNDL_3_TYPE = 'R' AND OHLC.OPEN_3 >= OHLC.CLOSE_4 AND  OHLC.OPEN_3 >= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.CLOSE_4 ) ) ) AND ( (DTL.CNDL_3_TYPE = 'G' AND DTL.CNDL_4_TYPE = 'R'  AND BR.TRADABLE_STATE_ID = 'BUY' AND BR.BUY_AT_VAL>=BR.VWAP_VAL) OR (DTL.CNDL_3_TYPE = 'R' AND DTL.CNDL_4_TYPE = 'G'  AND BR.TRADABLE_STATE_ID = 'SELL' AND BR.VWAP_VAL >= BR.SELL_AT_VAL) )    AND BR.DT_STAMP > CURRENT_DATE -29 AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=1500 AND BR.CNDL_NUM < 24 AND BR.DT_STAMP < CURRENT_DATE -12;

------------------------
-----------------------------
----------------------------------

----------------------------------forwardEngulginRuleTrades level 3----------------------------------



LVL 2
SELECT COUNT(*) AS  TRADE_COUNT, SUM(PROF_LOS_AMT_VAL) AS PROF_LOS_AMT_VAL, (SUM(PROF_LOS_AMT_VAL) - (COUNT(*) * 150)) AS PROF_LOS_AMT_VAL_FINAL, (SUM(CASE WHEN BR.MNAL_PROF_LOS_AMT_VAL IS NOT NULL AND BR.MNAL_PROF_LOS_AMT_VAL > 0 THEN MNAL_PROF_LOS_AMT_VAL WHEN BR.MNAL_PROF_LOS_AMT_VAL IS NULL OR BR.MNAL_PROF_LOS_AMT_VAL <= 0 THEN PROF_LOS_AMT_VAL END) - (COUNT(*) * 150)) AS PROF_LOS_AMT_VAL_MNAL_FINAL from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND ( (DTL.CNDL_3_TYPE = 'G' AND DTL.CNDL_4_TYPE = 'R'  AND BR.TRADABLE_STATE_ID = 'BUY' AND (OHLC.CLOSE_3 >= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.CLOSE_4 AND OHLC.OPEN_3 <=OHLC.LOW_4)  	) OR (DTL.CNDL_3_TYPE = 'R' AND DTL.CNDL_4_TYPE = 'G'  AND BR.TRADABLE_STATE_ID = 'SELL' AND OHLC.OPEN_3 >= OHLC.HIGH_4 AND (OHLC.OPEN_3 >= OHLC.CLOSE_4 AND  OHLC.OPEN_3 >= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.CLOSE_4)	  ) ) AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=1500 AND BR.DT_STAMP BETWEEN CURRENT_DATE-30 AND CURRENT_DATE-13 AND BR.CNDL_NUM <= 24; 

 
AND (OHLC.OPEN_4 >= ((OHLC.CLOSE_3 +OHLC.OPEN_3)/2) AND BR.BUY_AT_VAL>=BR.VWAP_VAL)
 
 
 AND (OHLC.OPEN_4 <= ((OHLC.CLOSE_3 +OHLC.OPEN_3)/2) AND BR.VWAP_VAL >= BR.SELL_AT_VAL)
 AND 

 AND OHLC.OPEN_4 >= ((OHLC.CLOSE_3 +OHLC.OPEN_3)/2) AND OHLC.HIGH_3 > OHLC.HIGH_4 AND OHLC.CLOSE_3 >= OHLC.CLOSE_4  


AND 
  AND OHLC.OPEN_4 <= ((OHLC.CLOSE_3 +OHLC.OPEN_3)/2) AND OHLC.LOW_3 < OHLC.LOW_4 
LVL 3 [THE BEST]
SELECT COUNT(*) AS  TRADE_COUNT, SUM(PROF_LOS_AMT_VAL) AS PROF_LOS_AMT_VAL, (SUM(PROF_LOS_AMT_VAL) - (COUNT(*) * 150)) AS PROF_LOS_AMT_VAL_FINAL, (SUM(CASE WHEN BR.MNAL_PROF_LOS_AMT_VAL IS NOT NULL AND BR.MNAL_PROF_LOS_AMT_VAL > 0 THEN MNAL_PROF_LOS_AMT_VAL WHEN BR.MNAL_PROF_LOS_AMT_VAL IS NULL OR BR.MNAL_PROF_LOS_AMT_VAL <= 0 THEN PROF_LOS_AMT_VAL END) - (COUNT(*) * 150)) AS PROF_LOS_AMT_VAL_MNAL_FINAL from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND ( (DTL.CNDL_3_TYPE = 'G' AND DTL.CNDL_4_TYPE = 'R'  AND BR.TRADABLE_STATE_ID = 'BUY' AND (OHLC.CLOSE_3 >= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.CLOSE_4 AND OHLC.OPEN_3 <=OHLC.LOW_4) AND (OHLC.OPEN_4 >= ((OHLC.CLOSE_3 +OHLC.OPEN_3)/2) AND BR.BUY_AT_VAL>=BR.VWAP_VAL)  	) OR (DTL.CNDL_3_TYPE = 'R' AND DTL.CNDL_4_TYPE = 'G'  AND BR.TRADABLE_STATE_ID = 'SELL' AND OHLC.OPEN_3 >= OHLC.HIGH_4 AND (OHLC.OPEN_3 >= OHLC.CLOSE_4 AND  OHLC.OPEN_3 >= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.CLOSE_4) AND (OHLC.OPEN_4 <= ((OHLC.CLOSE_3 +OHLC.OPEN_3)/2) AND BR.VWAP_VAL >= BR.SELL_AT_VAL)  ) ) AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=1500 AND BR.DT_STAMP BETWEEN CURRENT_DATE-30 AND CURRENT_DATE-13 AND BR.CNDL_NUM <= 24; 

 
AND BR.BUY_AT_VAL>=BR.VWAP_VAL 
 AND BR.VWAP_VAL >= BR.SELL_AT_VAL
 
 
 LVL 4
SELECT COUNT(*) AS  TRADE_COUNT, SUM(PROF_LOS_AMT_VAL) AS PROF_LOS_AMT_VAL, (SUM(PROF_LOS_AMT_VAL) - (COUNT(*) * 150)) AS PROF_LOS_AMT_VAL_FINAL, (SUM(CASE WHEN BR.MNAL_PROF_LOS_AMT_VAL IS NOT NULL AND BR.MNAL_PROF_LOS_AMT_VAL > 0 THEN MNAL_PROF_LOS_AMT_VAL WHEN BR.MNAL_PROF_LOS_AMT_VAL IS NULL OR BR.MNAL_PROF_LOS_AMT_VAL <= 0 THEN PROF_LOS_AMT_VAL END) - (COUNT(*) * 150)) AS PROF_LOS_AMT_VAL_MNAL_FINAL from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_PREV_CNDL_AVG_HIST RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND ( (DTL.CNDL_3_TYPE = 'G' AND DTL.CNDL_4_TYPE = 'R'  AND BR.TRADABLE_STATE_ID = 'BUY' AND (OHLC.CLOSE_3 >= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.OPEN_4 AND OHLC.OPEN_3 <= OHLC.CLOSE_4 AND OHLC.OPEN_3 <=OHLC.LOW_4) AND (OHLC.OPEN_4 >= ((OHLC.CLOSE_3 +OHLC.OPEN_3)/2) AND BR.BUY_AT_VAL>=BR.VWAP_VAL AND OHLC.HIGH_3 > OHLC.HIGH_4 AND OHLC.CLOSE_3 >= OHLC.CLOSE_4)  	) OR (DTL.CNDL_3_TYPE = 'R' AND DTL.CNDL_4_TYPE = 'G'  AND BR.TRADABLE_STATE_ID = 'SELL' AND OHLC.OPEN_3 >= OHLC.HIGH_4 AND (OHLC.OPEN_3 >= OHLC.CLOSE_4 AND  OHLC.OPEN_3 >= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.OPEN_4 AND OHLC.CLOSE_3 <= OHLC.CLOSE_4) AND (OHLC.OPEN_4 <= ((OHLC.CLOSE_3 +OHLC.OPEN_3)/2) AND BR.VWAP_VAL >= BR.SELL_AT_VAL AND OHLC.LOW_3 < OHLC.LOW_4 AND OHLC.OPEN_3 <= OHLC.OPEN_4	)  ) ) AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 <= 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <=1500 AND BR.DT_STAMP BETWEEN CURRENT_DATE-30 AND CURRENT_DATE-13 AND BR.CNDL_NUM <= 24; 


select count(*) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID where (RULE.TRADABLE_RULE LIKE '%ENGULFING%' OR RULE.TRADE_ON_RVRSE_ENGULFING_IND = true ) AND ((BR.TRADABLE_STATE_ID = 'BUY' AND BR.BUY_AT_VAL>=BR.VWAP_VAL) OR (BR.TRADABLE_STATE_ID = 'SELL' AND BR.VWAP_VAL >= BR.SELL_AT_VAL))



select count(*) from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID  INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID AND (RULE.TRADABLE_RULE LIKE '%ENGULFING%' OR RULE.TRADE_ON_RVRSE_ENGULFING_IND = true ) AND ((BR.TRADABLE_STATE_ID = 'BUY' AND BR.BUY_AT_VAL>=BR.VWAP_VAL AND (OHLC.OPEN_4 >= ((OHLC.CLOSE_3 +OHLC.OPEN_3)/2) )) OR (BR.TRADABLE_STATE_ID = 'SELL' AND BR.VWAP_VAL >= BR.SELL_AT_VAL AND (OHLC.OPEN_4 <= ((OHLC.CLOSE_3 +OHLC.OPEN_3)/2) ) ))


UPDATE T_ORB_TRADE_RULE SET TRADE_ON_FWD_ENGULFING_LVL3_IND = true where OPEN_RANGE_BREAK_OUT_ID IN (select BR.OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID where (RULE.TRADABLE_RULE LIKE '%ENGULFING%' OR RULE.TRADE_ON_RVRSE_ENGULFING_IND = true ) AND ((BR.TRADABLE_STATE_ID = 'BUY' AND BR.BUY_AT_VAL>=BR.VWAP_VAL) OR (BR.TRADABLE_STATE_ID = 'SELL' AND BR.VWAP_VAL >= BR.SELL_AT_VAL)) );


----------------------------------------------SMAVWAP greatest Start -----------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------

SELECT count(*) AS count, SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) AS PROF_LOS from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <= 500 AND BR.DT_STAMP > CURRENT_DATE -33  AND BR.DT_STAMP < CURRENT_DATE -3 AND DTL.CNDL_4_SIZE <= 2000  AND ((BR.TRADABLE_STATE_ID = 'BUY' AND (( (BR.BUY_AT_VAL - BR.VWAP_VAL) * BR.LOT_SIZE) >= 500) AND (( (BR.BUY_AT_VAL - BR.VWAP_VAL) * BR.LOT_SIZE) <= 3000)) OR (BR.TRADABLE_STATE_ID = 'SELL' AND ( ((BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) >= 2000) AND ( ((BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) <= 5000) ))

TRADE_ON_SMA_VWAP_OPEN_BTWN_AVG_HI_LO_LVL2_MIN5_PROD_IND

update T_ORB_TRADE_RULE SET TRADE_ON_SMA_VWAP_OPEN_BTWN_AVG_HI_LO_LVL2_MIN5_PROD_IND = NULL;

select count(*) from T_ORB_TRADE_RULE where TRADE_ON_SMA_VWAP_OPEN_BTWN_AVG_HI_LO_LVL2_MIN5_PROD_IND IS NOT NULL;

update T_ORB_TRADE_RULE SET TRADE_ON_SMA_VWAP_OPEN_BTWN_AVG_HI_LO_LVL2_MIN5_PROD_IND = true where OPEN_RANGE_BREAK_OUT_ID IN (SELECT RULE.OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_MIN5_IND = true AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <= 500 AND BR.DT_STAMP > CURRENT_DATE -33  AND BR.DT_STAMP < CURRENT_DATE -3 AND DTL.CNDL_4_SIZE <= 2000  AND ((BR.TRADABLE_STATE_ID = 'BUY' AND (( (BR.BUY_AT_VAL - BR.VWAP_VAL) * BR.LOT_SIZE) >= 500) AND (( (BR.BUY_AT_VAL - BR.VWAP_VAL) * BR.LOT_SIZE) <= 3000)) OR (BR.TRADABLE_STATE_ID = 'SELL' AND ( ((BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) >= 2000) AND ( ((BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) <= 5000) )))


SELECT count(*) AS count, SUM(PROF_LOS_AMT_VAL) - (count(*) * 150) AS PROF_LOS from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <= 500 AND BR.DT_STAMP > CURRENT_DATE -33 AND BR.DT_STAMP < CURRENT_DATE -3  AND ((BR.TRADABLE_STATE_ID = 'BUY' AND (( (BR.BUY_AT_VAL - BR.VWAP_VAL) * BR.LOT_SIZE) >= 500) AND (( (BR.BUY_AT_VAL - BR.VWAP_VAL) * BR.LOT_SIZE) <= 3000)) OR (BR.TRADABLE_STATE_ID = 'SELL' AND ( ((BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) >= 2000) AND ( ((BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) <= 7500) )) AND DTL.CNDL_4_SIZE < 3000


select count(*) from T_ORB_TRADE_RULE where TRADE_ON_SMA_VWAP_OPEN_BTWN_AVG_HI_LO_LVL2_PROD_IND IS NOT NULL;
update T_ORB_TRADE_RULE SET TRADE_ON_SMA_VWAP_OPEN_BTWN_AVG_HI_LO_LVL2_PROD_IND = NULL where TRADE_ON_SMA_VWAP_OPEN_BTWN_AVG_HI_LO_LVL2_PROD_IND IS NOT NULL;

update T_ORB_TRADE_RULE SET TRADE_ON_SMA_VWAP_OPEN_BTWN_AVG_HI_LO_LVL2_PROD_IND = true where OPEN_RANGE_BREAK_OUT_ID IN (SELECT BR.OPEN_RANGE_BREAK_OUT_ID from T_OPEN_RANGE_BREAK_OUT BR INNER JOIN T_ORB_TRADE_RULE RULE ON BR.OPEN_RANGE_BREAK_OUT_ID = RULE.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_OHLC OHLC ON BR.OPEN_RANGE_BREAK_OUT_ID = OHLC.OPEN_RANGE_BREAK_OUT_ID INNER JOIN T_ORB_PREV_CNDL_DETAIL DTL ON BR.OPEN_RANGE_BREAK_OUT_ID = DTL.OPEN_RANGE_BREAK_OUT_ID AND  RULE.TRADE_ON_SMA_VWAP_OPEN_BETWEEN_AVG_HI_LO_LVL2_IND = true AND BR.BUY_SELL_DIFF_VAL <= 300 AND BR.BUY_SELL_DIFF_VAL_2 < 500 AND  BR.GAP_UP_DOWN_MOVE_VAL <= 500 AND ((BR.TRADABLE_STATE_ID = 'BUY' AND (( (BR.BUY_AT_VAL - BR.VWAP_VAL) * BR.LOT_SIZE) >= 500) AND (( (BR.BUY_AT_VAL - BR.VWAP_VAL) * BR.LOT_SIZE) <= 3000)) OR (BR.TRADABLE_STATE_ID = 'SELL' AND ( ((BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) >= 2000) AND ( ((BR.VWAP_VAL - BR.SELL_AT_VAL) * BR.LOT_SIZE) <= 7500) )) AND DTL.CNDL_4_SIZE < 3000)

----------------------------------------------SMAVWAP greatest END -----------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------